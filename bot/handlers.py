import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from services.game_service import search_game, get_game_details, get_similar_games, get_price_history
from services.price_tracker import get_current_discounts
from data.data_manager import add_subscription, remove_subscription, get_user_subscriptions, update_user_info
from flask import current_app

# Set up logging
logging.basicConfig(level=logging.DEBUG, 
                    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# Command handlers
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start."""
    user = update.effective_user

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    with current_app.app_context():
        try:
            update_user_info(
                user_id=user.id,
                username=user.username,
                first_name=user.first_name,
                last_name=user.last_name
            )
            logger.info(f"–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {user.id}")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

    await update.message.reply_html(
        f"üéÆ –ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! üëã\n\n"
        "–Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–æ–∏—Å–∫—É —Å–∫–∏–¥–æ–∫ –Ω–∞ –∏–≥—Ä—ã!\n\n"
        "üîç –ß—Ç–æ —è —É–º–µ—é:\n"
        "‚Ä¢ –ò—Å–∫–∞—Ç—å –∏–≥—Ä—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –∂–∞–Ω—Ä—É –∏–ª–∏ –∏–∑–¥–∞—Ç–µ–ª—é\n"
        "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ü–µ–Ω—ã –Ω–∞ —Ç–≤–æ–∏ –ª—é–±–∏–º—ã–µ –∏–≥—Ä—ã\n"
        "‚Ä¢ –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Å–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω\n"
        "‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω\n"
        "‚Ä¢ –ù–∞—Ö–æ–¥–∏—Ç—å –ø–æ—Ö–æ–∂–∏–µ –∏–≥—Ä—ã\n\n"
        "üìù –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n"
        "üéØ –ù–∞—á–Ω–∏ —Å –∫–æ–º–∞–Ω–¥—ã /search –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–≥—Ä"
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /help."""
    help_text = (
        "üéÆ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "üîç –ü–æ–∏—Å–∫:\n"
        "‚Ä¢ /search <–Ω–∞–∑–≤–∞–Ω–∏–µ> - –ü–æ–∏—Å–∫ –∏–≥—Ä—ã\n"
        "‚Ä¢ /search genre <–∂–∞–Ω—Ä> - –ü–æ–∏—Å–∫ –ø–æ –∂–∞–Ω—Ä—É\n"
        "‚Ä¢ /search publisher <–∏–∑–¥–∞—Ç–µ–ª—å> - –ü–æ–∏—Å–∫ –ø–æ –∏–∑–¥–∞—Ç–µ–ª—é\n"
        "‚Ä¢ /similar <id> - –ù–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ –∏–≥—Ä—ã\n\n"
        "üí∞ –¶–µ–Ω—ã –∏ —Å–∫–∏–¥–∫–∏:\n"
        "‚Ä¢ /history <id> - –ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω\n"
        "‚Ä¢ /discounts - –¢–µ–∫—É—â–∏–µ —Å–∫–∏–¥–∫–∏\n"
        "‚Ä¢ /filter price <—Ü–µ–Ω–∞> - –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ\n"
        "‚Ä¢ /filter discount <–ø—Ä–æ—Ü–µ–Ω—Ç> - –§–∏–ª—å—Ç—Ä –ø–æ —Å–∫–∏–¥–∫–µ\n"
        "‚Ä¢ /filter clear - –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã\n\n"
        "üìã –ü–æ–¥–ø–∏—Å–∫–∏:\n"
        "‚Ä¢ /subscribe <id> - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–≥—Ä—É\n"
        "‚Ä¢ /unsubscribe <id> - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –∏–≥—Ä—ã\n"
        "‚Ä¢ /mysubs - –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏\n\n"
        "‚ùì /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    )
    await update.message.reply_text(help_text)

async def search_games(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ò—â–µ—Ç –∏–≥—Ä—ã –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /search."""
    if not context.args:
        await update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–∏—Å–∫–∞:\n"
            "/search <–Ω–∞–∑–≤–∞–Ω–∏–µ> - –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n"
            "/search genre <–∂–∞–Ω—Ä> <–Ω–∞–∑–≤–∞–Ω–∏–µ> - –ü–æ–∏—Å–∫ –ø–æ –∂–∞–Ω—Ä—É\n"
            "/search publisher <–∏–∑–¥–∞—Ç–µ–ª—å> <–Ω–∞–∑–≤–∞–Ω–∏–µ> - –ü–æ–∏—Å–∫ –ø–æ –∏–∑–¥–∞—Ç–µ–ª—é\n"
            "/similar <id_–∏–≥—Ä—ã> - –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –∏–≥—Ä\n"
            "/history <id_–∏–≥—Ä—ã> - –ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω"
        )
        return

    query = ' '.join(context.args)
    await update.message.reply_text(f"–ò—â—É: {query}...")

    try:
        results = await search_game(query)

        if not results:
            await update.message.reply_text(f"–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–≥—Ä –ø–æ –∑–∞–ø—Ä–æ—Å—É '{query}'. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.")
            return

        # –°–æ–∑–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        reply_text = "üéÆ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:\n\n"
        keyboard = []

        for idx, game in enumerate(results[:5]):  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            game_id = game.get('id')
            game_name = game.get('name')

            reply_text += f"{idx+1}. {game_name} (ID: {game_id})\n"

            # –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π
            keyboard.append([
                InlineKeyboardButton(f"–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ {game_name}", callback_data=f"sub_{game_id}"),
                InlineKeyboardButton(f"–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏", callback_data=f"details_{game_id}")
            ])

        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text(reply_text, reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ search_games: {e}")
        await update.message.reply_text(f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def subscribe_game(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç –Ω–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ —Ü–µ–Ω–µ –∏–≥—Ä—ã."""
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /search –¥–ª—è –ø–æ–∏—Å–∫–∞ ID –∏–≥—Ä.")
        return

    game_id = context.args[0]
    user_id = update.effective_user.id

    try:
        # –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ–± –∏–≥—Ä–µ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
        game_details = await get_game_details(game_id)

        if not game_details:
            await update.message.reply_text(f"–ò–≥—Ä–∞ —Å ID {game_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ ID –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return

        # –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        with current_app.app_context():
            # –ü–æ–ª—É—á–∞–µ—Ç –º–∏–Ω–∏–∞—Ç—é—Ä—É, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
            thumbnail = game_details.get('thumbnail', None)
            success = add_subscription(user_id, game_id, game_details.get('name', 'Unknown Game'), thumbnail)

            if success:
                await update.message.reply_text(
                    f"‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ü–µ–Ω–µ –¥–ª—è –∏–≥—Ä—ã {game_details.get('name')}.\n"
                    f"–Ø —É–≤–µ–¥–æ–º–ª—é –≤–∞—Å, –∫–æ–≥–¥–∞ —Ü–µ–Ω–∞ —Å–Ω–∏–∑–∏—Ç—Å—è!"
                )
            else:
                await update.message.reply_text(f"–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç—É –∏–≥—Ä—É.")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ subscribe_game: {e}")
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def unsubscribe_game(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø–∏—Å—ã–≤–∞–µ—Ç –æ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –æ —Ü–µ–Ω–µ –∏–≥—Ä—ã."""
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä—ã, –æ—Ç –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /mysubs, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏.")
        return

    game_id = context.args[0]
    user_id = update.effective_user.id

    try:
        # –£–¥–∞–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        with current_app.app_context():
            success, game_name = remove_subscription(user_id, game_id)

            if success:
                await update.message.reply_text(f"‚úÖ –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ü–µ–Ω–µ –¥–ª—è –∏–≥—Ä—ã {game_name}.")
            else:
                await update.message.reply_text("–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç—É –∏–≥—Ä—É.")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ unsubscribe_game: {e}")
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø–∏—Å–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def list_subscriptions(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∏–≥—Ä—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–ø–∏—Å–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å."""
    user_id = update.effective_user.id

    try:
        # –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        with current_app.app_context():
            subscriptions = get_user_subscriptions(user_id)

            if not subscriptions:
                await update.message.reply_text(
                    "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∏–≥—Ä—ã.\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /search –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–≥—Ä –∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –Ω–∏—Ö!"
                )
                return

            reply_text = "üéÆ –í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∏–≥—Ä—ã:\n\n"
            keyboard = []

            for game_id, game_info in subscriptions.items():
                game_name = game_info.get('name', 'Unknown Game')
                reply_text += f"‚Ä¢ {game_name} (ID: {game_id})\n"

                # –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏
                keyboard.append([
                    InlineKeyboardButton(f"–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç {game_name}", callback_data=f"unsub_{game_id}")
                ])

            reply_markup = InlineKeyboardMarkup(keyboard)
            await update.message.reply_text(reply_text, reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ list_subscriptions: {e}")
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def check_discounts(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ —Å–∫–∏–¥–∫–∏ –Ω–∞ –∏–≥—Ä—ã."""
    progress_msg = await update.message.reply_text("üîç –ò—â—É –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–∞—Å...")

    try:
        max_price = context.user_data.get('max_price')
        min_discount = context.user_data.get('min_discount')

        discounts = await get_current_discounts(
            max_price=max_price,
            min_discount=min_discount
        )

        if not discounts:
            await progress_msg.edit_text("üòî –°–µ–π—á–∞—Å –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å–∫–∏–¥–æ–∫.\n\nüí° –í–∫–ª—é—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (/mysubs), —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!")
            return

        reply_text = "üåü –õ–£–ß–®–ò–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø –°–ï–ì–û–î–ù–Ø üåü\n\n"
        keyboard = []

        for game in discounts[:10]:
            game_id = game.get('id')
            game_name = game.get('name')
            discount = game.get('discount_percent', 0)
            current_price = game.get('price_current', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            original_price = game.get('price_original', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
            store = game.get('store', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω')

            # –î–æ–±–∞–≤–ª—è–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏ –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–∫–∏–¥–æ–∫
            discount_stars = "‚≠êÔ∏è" * (discount // 25) if discount >= 25 else ""

            reply_text += (
                f"„Äî {game_name} „Äï{discount_stars}\n"
                f"‚îå üí∞ –°–µ–π—á–∞—Å: {current_price}\n"
                f"‚îú üìà –ë—ã–ª–æ: {original_price}\n"
                f"‚îú üî• –°–∫–∏–¥–∫–∞: -{discount}%\n"
                f"‚îî üè™ –ú–∞–≥–∞–∑–∏–Ω: {store}\n\n"
            )

            # –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
            keyboard.append([
                InlineKeyboardButton(f"–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ {game_name}", callback_data=f"sub_{game_id}"),
                InlineKeyboardButton(f"–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏", callback_data=f"details_{game_id}")
            ])

        reply_markup = InlineKeyboardMarkup(keyboard)
        await progress_msg.edit_text(reply_text, reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ check_discounts: {e}")
        await progress_msg.edit_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–∏—Ö —Å–∫–∏–¥–æ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –∏–∑ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä."""
    query = update.callback_query
    await query.answer()

    data = query.data

    try:
        if data.startswith('sub_'):
            game_id = data[4:]
            user_id = update.effective_user.id

            # –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ–± –∏–≥—Ä–µ
            game_details = await get_game_details(game_id)

            if not game_details:
                await query.edit_message_text(text=f"–ò–≥—Ä–∞ —Å ID {game_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –∏–≥—Ä—É.")
                return

            # –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            with current_app.app_context():
                # –ü–æ–ª—É—á–∞–µ—Ç –º–∏–Ω–∏–∞—Ç—é—Ä—É, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
                thumbnail = game_details.get('thumbnail', None)
                success = add_subscription(user_id, game_id, game_details.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞'), thumbnail)

                if success:
                    await query.edit_message_text(
                        text=f"‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ü–µ–Ω–µ –¥–ª—è –∏–≥—Ä—ã {game_details.get('name')}.\n"
                             f"–Ø —É–≤–µ–¥–æ–º–ª—é –≤–∞—Å, –∫–æ–≥–¥–∞ —Ü–µ–Ω–∞ —Å–Ω–∏–∑–∏—Ç—Å—è!"
                    )
                else:
                    await query.edit_message_text(text=f"–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç—É –∏–≥—Ä—É.")

        elif data.startswith('unsub_'):
            game_id = data[6:]
            user_id = update.effective_user.id

            # –£–¥–∞–ª—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            with current_app.app_context():
                success, game_name = remove_subscription(user_id, game_id)

                if success:
                    await query.edit_message_text(text=f"‚úÖ –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ü–µ–Ω–µ –¥–ª—è –∏–≥—Ä—ã {game_name}.")
                else:
                    await query.edit_message_text(text="–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —ç—Ç—É –∏–≥—Ä—É.")

        elif data.startswith('details_'):
            game_id = data[8:]

            # –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ–± –∏–≥—Ä–µ
            game_details = await get_game_details(game_id)

            if not game_details:
                await query.edit_message_text(text=f"–ò–≥—Ä–∞ —Å ID {game_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –∏–≥—Ä—É.")
                return

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ —Å–≤–µ–¥–µ–Ω–∏—è–º–∏ –æ–± –∏–≥—Ä–µ
            game_name = game_details.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞')
            stores = game_details.get('stores', [])
            prices = game_details.get('prices', {})

            details_text = f"üéÆ {game_name}\n\n"

            if 'description' in game_details:
                # –£–∫–æ—Ä–∞—á–∏–≤–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
                description = game_details['description']
                if len(description) > 200:
                    description = description[:197] + "..."
                details_text += f"üìù {description}\n\n"

            details_text += "üí∞ –¶–µ–Ω—ã:\n"

            for store_name, price_info in prices.items():
                current_price = price_info.get('current', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                original_price = price_info.get('original', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                discount = price_info.get('discount_percent', 0)

                if discount > 0:
                    details_text += f"üè™ {store_name}: {current_price} (–±—ã–ª–æ {original_price}, -{discount}%)\n"
                else:
                    details_text += f"üè™ {store_name}: {current_price}\n"

            # –î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
            keyboard = [[InlineKeyboardButton(f"–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ {game_name}", callback_data=f"sub_{game_id}")]]
            reply_markup = InlineKeyboardMarkup(keyboard)

            await query.edit_message_text(text=details_text, reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ button_handler: {e}")
        await query.edit_message_text(text="–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–õ–æ–≥–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏, –≤—ã–∑–≤–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏."""
    logger.error(f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {update} –≤—ã–∑–≤–∞–ª–æ –æ—à–∏–±–∫—É {context.error}")

    # –£–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± –æ—à–∏–±–∫–µ
    if update.effective_message:
        await update.effective_message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


async def handle_filters(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ —Ü–µ–Ω–µ –∏ —Å–∫–∏–¥–∫–µ"""
    if not context.args or len(context.args) < 1:
        await update.message.reply_text(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
            "/filter price <–º–∞–∫—Å_—Ü–µ–Ω–∞> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É\n"
            "/filter discount <–ø—Ä–æ—Ü–µ–Ω—Ç> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É\n"
            "/filter clear - –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã"
        )
        return

    filter_type = context.args[0].lower()

    if filter_type == "clear":
        context.user_data.clear()
        await update.message.reply_text("‚úÖ –í—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã")
        return

    if len(context.args) < 2:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞")
        return

    try:
        value = float(context.args[1])
        if filter_type == "price":
            if value <= 0:
                await update.message.reply_text("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0")
                return
            context.user_data['max_price'] = value
            await update.message.reply_text(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ: –¥–æ ${value:.2f}")

        elif filter_type == "discount":
            if not 0 <= value <= 100:
                await update.message.reply_text("–°–∫–∏–¥–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0 –¥–æ 100%")
                return
            context.user_data['min_discount'] = value
            await update.message.reply_text(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å–∫–∏–¥–∫–µ: –æ—Ç {value}%")

        else:
            await update.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∏–ª—å—Ç—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'price' –∏–ª–∏ 'discount'")

    except ValueError:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
async def similar_games(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Ö–æ–∂–∏–µ –∏–≥—Ä—ã."""
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Ö–æ–∂–∏—Ö. –ü—Ä–∏–º–µ—Ä: /similar 12345")
        return

    game_id = context.args[0]
    await update.message.reply_text("–ò—â—É –ø–æ—Ö–æ–∂–∏–µ –∏–≥—Ä—ã...")

    try:
        similar = await get_similar_games(game_id)

        if not similar:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ –∏–≥—Ä—ã.")
            return

        reply_text = "üéÆ –ü–æ—Ö–æ–∂–∏–µ –∏–≥—Ä—ã:\n\n"
        keyboard = []

        for game in similar:
            game_id = game.get('id')
            game_name = game.get('name')
            price = game.get('cheapest_price', '–¶–µ–Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞')

            reply_text += f"‚Ä¢ {game_name} - ${price}\n"
            keyboard.append([
                InlineKeyboardButton(f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ {game_name}", callback_data=f"details_{game_id}")
            ])

        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text(reply_text, reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ similar_games: {e}")
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ—Ö–æ–∂–∏—Ö –∏–≥—Ä.")

async def price_history(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω –∏–≥—Ä—ã."""
    if not context.args:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∏–≥—Ä—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω. –ü—Ä–∏–º–µ—Ä: /history 12345")
        return

    game_id = context.args[0]
    await update.message.reply_text("–ü–æ–ª—É—á–∞—é –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω...")

    try:
        history = await get_price_history(game_id)
        game_details = await get_game_details(game_id)

        if not history or not game_details:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω.")
            return

        game_name = game_details.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞')
        reply_text = f"üìä –ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω –¥–ª—è {game_name}:\n\n"

        for i in range(len(history['dates'])):
            date = history['dates'][i]
            price = history['prices'][i]
            store = history['stores'][i]
            reply_text += f"üìÖ {date}\nüí∞ ${price} ({store})\n\n"

        await update.message.reply_text(reply_text)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ price_history: {e}")
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω.")